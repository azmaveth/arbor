import Config

# For production, don't forget to configure the url host
# to something meaningful, Phoenix uses this information
# when generating URLs.
#
# Note we also include the path to a cache manifest
# containing the digested version of static files. This
# manifest is generated by the mix phx.digest task
# which you should run after static files are built.

# Runtime production configuration, including reading
# of environment variables, is done on config/runtime.exs.

# Configures Elixir's Logger
config :logger, level: :info

# Configure telemetry for production
config :telemetry_poller, :default, period: 5_000

# Arbor Core configuration for production
config :arbor_core,
  # Gateway configuration
  gateway: [
    max_sessions: 1000,
    session_timeout: :timer.hours(4),
    command_timeout: :timer.minutes(10)
  ],

  # Session manager configuration  
  session_manager: [
    cleanup_interval: :timer.minutes(5),
    max_idle_time: :timer.minutes(30)
  ],

  # Telemetry configuration
  telemetry: [
    metrics_port: 9464,
    enable_prometheus: true,
    enable_jaeger: true
  ],

  # PubSub configuration
  pubsub: [
    name: Arbor.PubSub,
    adapter: Phoenix.PubSub.PG2
  ]

# Arbor Contracts configuration
config :arbor_contracts,
  # Agent behavior validation
  strict_validation: true,
  capability_ttl: :timer.hours(1)

# Arbor Security configuration  
config :arbor_security,
  # Security settings for production
  enable_audit_logging: true,
  capability_encryption: true

# Arbor Persistence configuration
config :arbor_persistence,
  # Database settings will be configured in runtime.exs
  enable_metrics: true

# Configure libcluster for production
# Using Kubernetes strategy for cloud deployments
config :libcluster,
  topologies: [
    arbor_prod: [
      strategy: Elixir.Cluster.Strategy.Kubernetes,
      config: [
        mode: :hostname,
        kubernetes_node_basename: "arbor",
        kubernetes_selector: "app=arbor,tier=backend",
        kubernetes_namespace: "default",
        polling_interval: 10_000
      ]
    ]
  ]

# Configure distributed Erlang for production (only for releases)
if System.get_env("RELEASE_MODE") do
  config :kernel,
    inet_dist_listen_min: 9100,
    inet_dist_listen_max: 9200,
    # Use TLS for distribution in production
    inet_dist_use_interface: {:system, "POD_IP"}
end

# Use production Horde implementations
config :arbor_core,
  registry_impl: :horde,
  supervisor_impl: :horde,
  coordinator_impl: :horde

# Configure robust agent retries for production
config :arbor_core, :agent_retry,
  retries: 3,
  initial_delay: 250
